[build-system]
requires = ["setuptools>=61.0", "versioningit~=2.0"]
build-backend = "setuptools.build_meta"

# Self-descriptive entries which should always be present
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "QMzyme"
description = "QM-based enzyme model generation and validation."
dynamic = ["version"]
readme = "README.md"
authors = [
    { name = "Heidi Klem", email = "heidi.klem@nist.gov" }
]
license = { text = "MIT" }
# See https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.11"
# Declare any run-time dependencies that should be installed with the package.
dependencies = [
    "importlib_resources",
    "MDAnalysis",
    "jupyterlab", #not super necessary, but helpful to follow along with examples
    "PyYAML", #aqme dependency
    #"aqme", #bc lots of dependencies
    "rdkit-pypi", # dependency of aqme but doesn't get installed with pip install aqme
    "openbabel-wheel" #this works! And you don't have to add conda install -c conda-forge openbabel to config.yml, which makes testing faster (by like 30%)
    #"openbabel" #doesn't work to install this way... need to do conda install -c conda-forge openbabel in config.yml
]

# Update the urls once the hosting is set up.
[project.urls]
"Source" = "https://github.com/hklem/QMzyme/"
"Documentation" = "https://qmzyme.readthedocs.io/"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov"
]


[tool.setuptools]
# This subkey is a beta stage development and keys may change in the future, see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html for more details
#
# As of version 0.971, mypy does not support type checking of installed zipped
# packages (because it does not actually import the Python packages).
# We declare the package not-zip-safe so that our type hints are also available
# when checking client code that uses our (installed) package.
# Ref:
# https://mypy.readthedocs.io/en/stable/installed_packages.html?highlight=zip#using-installed-packages-with-mypy-pep-561
zip-safe = false
# Let setuptools discover the package in the current directory,
# but be explicit about non-Python files.
# See also:
#   https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration
# Note that behavior is currently evolving with respect to how to interpret the
# "data" and "tests" subdirectories. As of setuptools 63, both are automatically
# included if namespaces is true (default), even if the package is named explicitly
# (instead of using 'find'). With 'find', the 'tests' subpackage is discovered
# recursively because of its __init__.py file, but the data subdirectory is excluded
# with include-package-data = false and namespaces = false.

#include-package-data = false
[tool.setuptools.packages.find]
#namespaces = false
where = [".","QMzyme/data"] # use "." and not "QMzyme" so pytest can find tests.

# Ref https://setuptools.pypa.io/en/latest/userguide/datafiles.html#package-data
[tool.setuptools.package-data]
QMzyme = [
    "py.typed",
    "QMzyme/data/*",
]

[tool.versioningit]
default-version = "1+unknown"

[tool.versioningit.format]
#distance = "{base_version}+{distance}.{vcs}{rev}"
#dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
#distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance = "{base_version}.dev{distance}"
dirty = "{base_version}.dev{distance}"
distance-dirty = "{base_version}.dev{distance}"

[tool.versioningit.vcs]
# The method key:
method = "git"  # <- The method name
# Parameters to pass to the method:
match = ["*"]
default-tag = "0.0.0"

[tool.versioningit.write]
file = "QMzyme/_version.py"

[tool.coverage.run]
omit = ["QMzyme/aqme/*", "QMzyme/_version.py"]
